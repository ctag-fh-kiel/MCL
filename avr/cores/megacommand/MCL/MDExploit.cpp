/* Copyright 2018, Justin Mammarella jmamma@gmail.com */
#include "LFOSeqTrack.h"
#include "MCL.h"
#include "MCLSeq.h"
#include "MDExploit.h"

uint8_t last_md_track = 0;
void MDExploit::setup() {}
void MDExploit::setup_global(uint8_t global_num) {
  /** Original position of the global inside the MD (0 to 7). **/
  if (global_num == 0) {
    MD.global.origPosition = 6;
  } else {
    MD.global.origPosition = 7;
  }
  /** Stores the audio output for each track. **/

  for (uint8_t track_n = 0; track_n < 16; track_n++) {
    MD.global.drumRouting[track_n] = mcl_cfg.routing[track_n];
  }

  // baseChannel
  // -- 0
  // 1-4 1
  // 5-8 2
  // 9-12 3
  // 13-16 4

  /** The MIDI base channel of the MachineDrum. **/
  if (global_num == 0) {
    MD.global.baseChannel = 3;
  } else {
    MD.global.baseChannel = 9;
  }

  MD.global.extendedMode = true;
  if (MidiClock.mode == MidiClock.EXTERNAL_MIDI) {
    MD.global.clockIn = false;
    MD.global.clockOut = true;
  } else {
    MD.global.clockIn = true;
    MD.global.clockOut = false;
  }
  MD.global.transportIn = true;
  // some bug
  MD.global.transportOut = true;
  MD.global.localOn = true;
  if ((MidiClock.get_tempo() > 30) && (MidiClock.get_tempo() < 300)) {
    MD.global.tempo = MidiClock.get_tempo() * 24;
  } else {
    MD.global.tempo = 125 * 24;
  }
  MD.global.drumLeft = 16;
  MD.global.drumRight = 16;
  MD.global.programChange = 2;
}
void MDExploit::send_globals() {
  //  if (rec_global) {
  DEBUG_PRINT_FN();
//  ElektronDataToSysexEncoder encoder(&MidiUart);
  ElektronDataToSysexEncoder encoder2(&MidiUart);
 // setup_global(0);
  // in_sysex = 1;
 // MD.global.toSysex(encoder);
  setup_global(1);
  MD.global.toSysex(encoder2);
  // in_sysex = 0;
  //  }
}

void MDExploit::switch_global(uint8_t global_page) {
  DEBUG_PRINT_FN();

  if (global_page == 6) {
    MD.global.baseChannel = 3;
  } else {
    MD.global.baseChannel = 9;
  }
  uint8_t data[] = {0x56, (uint8_t)(global_page & 0x7F)};
  // in_sysex = 1;
  MD.sendSysex(data, countof(data));
  // in_sysex = 0;
}

MDExploit md_exploit;
